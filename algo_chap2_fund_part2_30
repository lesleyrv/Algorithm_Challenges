//Messy Math Mashup


function messyMath(myNum) {
  var sum = 0;
   for (var i = 1; i <= myNum; i++) {
       if (i * 3 == myNum) {
           sum = -1;
         console.log (sum)
           return sum;
       } else if (i % 3 == 0) {
         //console.log('i%3 = ' + i)
           continue;
       } else if (i % 7 == 0) {
           sum +=i*2;
        // console.log('i%7 = ' + i)
       } else {
           sum += i;
        // console.log('sum = sum + i' + i)
       }

   }
   console.log(sum);
}
messyMath(15);
messyMath(4);
messyMath(8);

//or 
function messyMath(num){
  let sum = 0;
  
  for (let cnt = 0; cnt <= num; cnt++ ){
    if (cnt === num/3){
      return -1;
    } else if (cnt%3 !== 0){
      if (cnt%7 ===0){
        sum += cnt*2
      }else {
        sum += cnt;
      }
    }
  }
  return sum;
}

console.log(messyMath(4));
console.log(messyMath(8));
console.log(messyMath(15));

//  Twelve-Bar Blues
// Write a function that console.logs the number 1, then "chick", then "boom", then "chick", then 2, then "chick", "boom", "chick" – continuing the same cycle for each number up to (including) 12
function twelveBar(num){
  for (var i=1; i<=num; i++){
    console.log(`${i} chick, boom, chick`);
  }
}

twelveBar(12);

// Fibonacci
function fib(n) {
  if (n < 2){
    return n
  }
  return fib(n - 1) + fib (n - 2)
}

console.log(fib(1));

console.log(fib(3));
console.log(fib(5));
console.log(fib(6));
console.log(fib(7));
console.log(fib(12));

//Sum to one digit
// a given interger's digit repeatly until the sum is only one digit. return that one-digit result


var value=928;

while(value > 9){
    value=sum(value);
}
console.log(value)
		
function sum(value){
    var sum=value.toString().split("")
                 .reduce(function(a,b) {
                   return a+parseInt(b);
                  },0);
    return sum;
}
